            X(0x080, b)
            X(0x090, call)
            X(0x0A0, ret)
            X(0x0B0, bal)
            X(0x100, bno)
            X(0x110, bg)
            X(0x120, be)
            X(0x130, bge)
            X(0x140, bl)
            X(0x150, bne)
            X(0x160, ble)
            X(0x170, bo)
            X(0x180, faultno)
            X(0x190, faultg)
            X(0x1A0, faulte)
            X(0x1B0, faultge)
            X(0x1C0, faultl)
            X(0x1D0, faultne)
            X(0x1E0, faultle)
            X(0x1F0, faulto)
            X(0x200, testno)
            X(0x210, testg)
            X(0x220, teste)
            X(0x230, testge)
            X(0x240, testl)
            X(0x250, testne)
            X(0x260, testle)
            X(0x270, testo)
            X(0x300, bbc)
            X(0x310, compareAndBranch<ConditionCodeKind::GreaterThan> (inst.getSrc1 (), inst.getSrc2 (), inst.getDisplacement (), TreatAsOrdinal { }); break;
            X(0x320, compareAndBranch<ConditionCodeKind::EqualTo> (inst.getSrc1 (), inst.getSrc2 (), inst.getDisplacement (), TreatAsOrdinal { }); break;
            X(0x330, compareAndBranch<ConditionCodeKind::GreaterThanOrEqualTo> (inst.getSrc1 (), inst.getSrc2 (), inst.getDisplacement (), TreatAsOrdinal{}); break;
            X(0x340, compareAndBranch<ConditionCodeKind::LessThan> (inst.getSrc1 (), inst.getSrc2 (), inst.getDisplacement (), TreatAsOrdinal { }); break;
            X(0x350, compareAndBranch<ConditionCodeKind::NotEqual> (inst.getSrc1 (), inst.getSrc2 (), inst.getDisplacement (), TreatAsOrdinal { }); break;
            X(0x360, compareAndBranch<ConditionCodeKind::LessThanOrEqual> (inst.getSrc1 (), inst.getSrc2 (), inst.getDisplacement (), TreatAsOrdinal { }); break;
            X(0x370, bbs)
            X(0x380, compareAndBranch<ConditionCodeKind::Unordered> (inst.getSrc1 (), inst.getSrc2 (), inst.getDisplacement (), TreatAsInteger{}); break;
            X(0x390, compareAndBranch<ConditionCodeKind::GreaterThan> (inst.getSrc1 (), inst.getSrc2 (), inst.getDisplacement (), TreatAsInteger{}); break;
            X(0x3A0, compareAndBranch<ConditionCodeKind::EqualTo> (inst.getSrc1 (), inst.getSrc2 (), inst.getDisplacement (), TreatAsInteger{}); break;
            X(0x3B0, compareAndBranch<ConditionCodeKind::GreaterThanOrEqualTo> (inst.getSrc1 (), inst.getSrc2 (), inst.getDisplacement (), TreatAsInteger{}); break;
            X(0x3C0, compareAndBranch<ConditionCodeKind::LessThan> (inst.getSrc1 (), inst.getSrc2 (), inst.getDisplacement (), TreatAsInteger{}); break;
            X(0x3D0, compareAndBranch<ConditionCodeKind::NotEqual> (inst.getSrc1 (), inst.getSrc2 (), inst.getDisplacement (), TreatAsInteger{}); break;
            X(0x3E0, compareAndBranch<ConditionCodeKind::LessThanOrEqual> (inst.getSrc1 (), inst.getSrc2 (), inst.getDisplacement (), TreatAsInteger{}); break;
            X(0x3F0, compareAndBranch<ConditionCodeKind::Ordered> (inst.getSrc1 (), inst.getSrc2 (), inst.getDisplacement (), TreatAsInteger{}); break;

            X(0x580, notbit)
            X(0x581, logicalAnd)
            X(0x582, andnot)
            X(0x583, setbit)
            X(0x584, notand )
            X(0x586, logicalXor )
            X(0x587, logicalOr )
            X(0x588, logicalNor )
            X(0x589, logicalXnor )
            X(0x58A, logicalNot )
            X(0x58B, ornot )
            X(0x58C, clrbit )
            X(0x58D, notor )
            X(0x58E, logicalNand )
            X(0x58F, alterbit )
            X(0x590, addo)
            X(0x591, addi)
            X(0x592, subo)
            X(0x593, subi )
            X(0x594, cmpob)
            X(0x595, cmpib)
            X(0x596, cmpos)
            X(0x597, cmpis)
            X(0x598, shro)
            X(0x59A, shrdi)
            X(0x59B, shri)
            X(0x59C, shlo)
            X(0x59D, rotate)
            X(0x59E, shli)
            X(0x5A0, cmpo)
            X(0x5A1, cmpi)
            X(0x5A2, concmpo)
            X(0x5A3, concmpi)
            X(0x5A4, cmpinco)
            X(0x5A5, cmpinci)
            X(0x5A6, cmpdeco)
            X(0x5A7, cmpdeci)
            X(0x5AC, scanbyte)
            X(0x5AD, bswap)
            X(0x5AE, chkbit)
            X(0x5B0, addc)
            X(0x5B2, subc)
            X(0x5B4, intdis)
            X(0x5B5, inten)
            X(0x5CC, mov)
            X(0x5D8, eshro)
            X(0x5DC, movl)
            X(0x5EC, movt)
            X(0x5FC, movq)
            X(0x610, atmod)
            X(0x612, atadd)
            X(0x640, spanbit)
            X(0x641, scanbit)
            X(0x642, daddc)
            X(0x643, dsubc)
            X(0x644, dmovt)
            X(0x645, modac)
            X(0x650, modify)
            X(0x651, extract)
            X(0x654, modtc)
            X(0x655, modpc)
            X(0x658, intctl) (inst.getSrc1 (), inst.getDestination ()); break;
            X(0x659, sysctl) (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x65B, icctl) (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x65C, dcctl (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x660, calls (inst.getSrc1 ()); break;
            X(0x66B, mark (); break;
            X(0x66C, fmark (); break;
            X(0x66D, flushreg (); break;
            X(0x66F, syncf (); break;
            X(0x670, emul (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x671, ediv (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x701, mulo (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x708, remo (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x70B, divo (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x741, muli (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x748, remi (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x749, modi (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x74B, divi (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x780, addono (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x781, addino (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x782, subono (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x783, subino (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x784, selno (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x790, addog (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x791, addig (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x792, subog (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x793, subig (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x794, selg (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7A0, addoe (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7A1, addie (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7A2, suboe (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7A3, subie (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7A4, sele (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7B0, addoge (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7B1, addige (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7B2, suboge (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7B3, subige (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7B4, selge (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7C0, addol (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7C1, addil (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7C2, subol (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7C3, subil (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7C4, sell (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7D0, addone (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7D1, addine (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7D2, subone (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7D3, subine (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7D4, selne (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7E0, addole (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7E1, addile (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7E2, subole (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7E3, subile (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7E4, selle (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7F0, addoo (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7F1, addio (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7F2, suboo (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7F3, subio (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x7F4, selo (inst.getSrc1 (), inst.getSrc2 (), inst.getDestination ()); break;
            X(0x800, ldob (address, inst.getSrcDest ()); break;
            X(0x820, stob (inst.getSrcDest (), address); break;
            X(0x840, bx (address); break;
            X(0x850, balx (address, inst.getSrcDest ()); break;
            X(0x860, callx (address); break;
            X(0x880, ldos (address, inst.getSrcDest ()); break;
            X(0x8A0, stos (inst.getSrcDest (), address); break;
            X(0x8C0, lda (address, inst.getSrcDest ()); break;
            X(0x900, ld (address, inst.getSrcDest ()); break;
            X(0x920, st (inst.getSrcDest (), address); break;
            X(0x980, ldl (address, inst.getSrcDest ()); break;
            X(0xA00, ldt (address, inst.getSrcDest ()); break;
            X(0xA20, stt (inst.getSrcDest (), address); break;
            X(0xB00, ldq (address, inst.getSrcDest ()); break;
            X(0xB20, stq (inst.getSrcDest (), address); break;
            X(0xC00, ldib (address, inst.getSrcDest ()); break;
            X(0xC20, stib (inst.getSrcDest (), address); break;
            X(0xC80, ldis (address, inst.getSrcDest ()); break;
            X(0xCA0, stis (inst.getSrcDest (), address); break;
